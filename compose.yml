services:
  # Teedyアプリケーション本体
  teedy-server:
    image: sismics/docs:v1.11
    restart: unless-stopped
    ports:
      - 8081:8080  # ホストの8081番ポートをコンテナの8080番ポートにマッピング
    environment:
      DOCS_BASE_URL: "${DOCS_BASE_URL}"  # TeedyのベースURL
      DOCS_ADMIN_EMAIL_INIT: "${DOCS_ADMIN_EMAIL_INIT}"  # 管理者メールアドレス
      DOCS_ADMIN_PASSWORD_INIT: "${DOCS_ADMIN_PASSWORD_INIT}"  # 管理者パスワード（例: "superSecure" のハッシュ値）
      DATABASE_URL: "${DATABASE_URL}"  # データベース接続設定
      DATABASE_USER: "${DATABASE_USER}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_POOL_SIZE: "${DATABASE_POOL_SIZE}"
    container_name: teedy-server
    volumes:  # Teedyのデータを永続化
      - ./teedy/docs/data:/data
    networks:
      - docker-internal
      - internet
    depends_on:  # DBサービス起動後にTeedyを起動
      - teedy-db

  # Teedy用PostgreSQLデータベース
  teedy-db:
    image: postgres:13.1-alpine
    restart: unless-stopped
    expose:
      - 5432  # コンテナ間通信用に5432番ポートを公開
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    container_name: teedy-db
    volumes:
      - ./teedy/docs/db:/var/lib/postgresql/data  # DBデータを永続化
    networks:
      - docker-internal

  # PHPサービス
  php:
    restart: always
    build:
      context: .
      dockerfile: ./web/php/Dockerfile
    container_name: php-fpm
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - php-fpm-sock:/var/run/php-fpm
      - meta_data:/tmp
    networks:
      - docker-internal
      - internet

  # NGINXサービス
  nginx:
    restart: always
    ports:
      - 8008:80  # ホストの8008番ポートをコンテナの80番ポートにマッピング
    build:
      context: .
      dockerfile: ./web/nginx/Dockerfile
    container_name: nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - php-fpm-sock:/var/run/php-fpm
    depends_on:  # PHPサービス起動後にNGINXを起動
      - php
    networks:
      - internet

  # Pythonサービス
  python3:
    restart: always
    build:
      context: .
      dockerfile: ./web/python/Dockerfile
    container_name: python3
    command: tail -f /dev/null
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - meta_data:/tmp
    networks:
      - docker-internal
      - internet

# DB用の内部ネットワーク（外部アクセス不可）
networks:
  docker-internal:
    driver: bridge
    internal: true
  # 外部アクセス可能なネットワーク
  internet:
    driver: bridge

volumes:
  meta_data:
  php-fpm-sock: